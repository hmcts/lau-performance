plugins {
    id 'org.owasp.dependencycheck' version '8.0.2'
    id 'scala'
    id 'io.gatling.gradle' version '3.9.0'
    //id 'java-gradle-plugin'
    id 'groovy'
    id 'com.gradle.plugin-publish' version '0.9.8'
    id 'maven-publish'
    id 'application'
}
//apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'io.gatling.gradle'
apply plugin: 'application'
group 'uk.gov.hmcts.reform'
version = '1.0'
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}
tasks.withType(JavaExec) {
    jvmArgs = ['-Xms1024m', '-Xmx2048m']
    /* Use the following args to build a report when a test was terminated
    args = [
        "--reports-only", "fact-20201109092032896",
        '--results-folder', file('build/reports/gatling').absolutePath,
        ]
    */
}
tasks.withType(Copy).all{
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
repositories {
    jcenter()
}
/*ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false
ext {
    gatlingVersion = '3.3.1'
    scalaVersion = '2.12.12'
}*/
gatling {
    gatlingVersion '3.9.0'
    scalaVersion '2.13.9'
    simulations = {
        include "uk/gov/hmcts/reform/LandA/performance/simulations/mainSimulation.scala"
    }
}
dependencyCheck {
    analyzers.assemblyEnabled = false
}

dependencies {
    implementation group: 'io.gatling.highcharts', name: 'gatling-charts-highcharts', version: '3.9.0'
}

/*dependencies {
    compile "org.scala-lang:scala-library:${scalaVersion}"
    gatling "io.gatling:gatling-app:${gatlingVersion}"
    gatling "io.gatling.highcharts:gatling-charts-highcharts:${gatlingVersion}"
    //gatlingImplementation "groupio.rest-assured:rest-assured:4.3.1"
    gatling "com.warrenstrange:googleauth:1.5.0"
}*/

sourceSets {
    gatling {
        scala {
            srcDir 'src/gatling/simulations'
        }
        resources {
            srcDir 'src/gatling/resources'
        }
    }
}


/*test {
    testLogging {
        showStandardStreams = true
    }
    dependsOn("publishToMavenLocal")
    systemProperty "com.github.lkishalmi.gatling.version", project.version
}
pluginBundle {
    website = 'https://github.com/lkishalmi/gradle-gatling-plugin'
    vcsUrl = 'https://github.com/lkishalmi/gradle-gatling-plugin'
    description = 'Gatling Simulation Execution'
    tags = ['gatling', 'load test', 'stress test', 'performance test', 'scala']
}
ext ['netty.version'] = '4.0.51.Final'*/